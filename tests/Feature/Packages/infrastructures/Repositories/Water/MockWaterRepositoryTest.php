<?php

namespace Packages\infrastructures\Repositories\Water;

use App\Exceptions\NotFoundException;
use App\Packages\Domains\Water\TarmWaterSetting;
use App\Packages\Domains\Water\WaterAmount;
use App\Packages\Domains\Water\WateringInterval;
use App\Packages\Domains\Water\WateringTimes;
use App\Packages\Domains\Water\WaterNote;
use App\Packages\Domains\Water\WaterSettingID;
use App\Packages\infrastructures\Water\MockWaterRepository;
use PHPUnit\Framework\TestCase;

class MockWaterRepositoryTest extends TestCase
{

    private MockWaterRepository $mockWaterRepository;

    protected function setUp(): void
    {
        parent::setUp(); // TODO: Change the autogenerated stub
        $this->mockWaterRepository = new MockWaterRepository();
    }

    public function test_設定IDから検索して情報を取得する()
    {
        $waterSettingId = new WaterSettingID('983c1092-7a0d-40b0-af6e-30bff5975e31');
        $waterSetting = $this->mockWaterRepository->findById($waterSettingId);

        $this->assertSame($waterSettingId->getId(), $waterSetting->getWaterSettingId());
    }

    public function test_存在しない設定IDから検索すると例外を出すこと()
    {
        $waterSettingId = new WaterSettingID('111c1111-1a1d-11b1-af1e-11bff1111e11');

        $this->expectException(NotFoundException::class);
        $waterSetting = $this->mockWaterRepository->findById($waterSettingId);
    }

    public function test_設定を追加する()
    {
        $addWaterSetting = new TarmWaterSetting(
            new WaterSettingID('999c1092-7a0d-40b0-af6e-30bff5975e31'),
            [1, 3, 5],
            new WaterNote('やったぜ'),
            WaterAmount::settingALot(),
            new WateringTimes(1),
            new WateringInterval(2),
            ['00:00', '12:30']
        );
        $this->mockWaterRepository->save($addWaterSetting);

        $waterSettingId = new WaterSettingID('999c1092-7a0d-40b0-af6e-30bff5975e31');
        $waterSetting = $this->mockWaterRepository->findById($waterSettingId);

        $this->assertSame($waterSettingId->getId(), $waterSetting->getWaterSettingId());
    }

    public function test_設定を削除する()
    {
        $waterSettingId = new WaterSettingID('983c1092-7a0d-40b0-af6e-30bff5975e31');
        $this->mockWaterRepository->delete($waterSettingId);
        $this->expectException(NotFoundException::class);
        $waterSetting = $this->mockWaterRepository->findById($waterSettingId);
    }
}
